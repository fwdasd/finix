
div:
	一般格式为：div reg或div 内存单元，reg和内存单元存放的是除数，除数可分为8位和16为2种。

	被除数：默认放在AX或DX和AX，如果除数为8位，被除数则为16位，默认在AX中存放；
	如果除数 为16位，被除数则为32位，在DX和AX中存放，DX存放高16位，AX存放低16位。

	结果：如果除数为8位，则AL存储除法操作的商，AH存储除法操作的余数；
	如果除数为16位，则AX存储除法操作的商，DX存储除法操作的余数。


移位指令包括了 算术移位指令、逻辑移位指令、循环移位指令。

    格式为:xxx oper1,CL/1         ;移位次数只能是1或者存放在CL里面。


一、算术移位指令

1、算术左移指令SAL
功能：左移一次，最低位补0，最高位送入CF标志位.
意义：左移n次，等于x2的n次幂。所以可用于有符号操作数做x2的n次幂运算。

2、算术右移指令SAR
功能：右移一次，最高位保持不变，最低位送入CF标志位.
意义：右移n次，等于/2的n次幂。所以可用于有符号操作数做/2的n次幂运算。

二、逻辑移位指令

1、逻辑左移SHL
功能：同SAL.

2.逻辑右移SHR

功能：右移一次，最高位补0.区别！最低位送入CF标志位。

循环移位指令
1.循环左移指令ROL
功能：左移一次，左移前的最高位送入最低位以及CF.

2.循环右移指令ROR
功能：右移一次，右移前的最低位送入最高位以及CF.

3、带进位的循环左移RCL
功能：左移一次，左移前的最高位送入CF，CF的内容送入最低位.

4.带进位的循环右移RCR
功能：右移一次，右移前的最低位送入CF，CF的内容送入最高位.



指令格式：

MUL    REG/MEM    ；REG寄存器，MEM存储器

IMUL   REG/MEM

    MUL和IMUL指令分别用于实现无符号数的乘法和有符号数的乘法运算。都只有一个源操作数，可以使寄存器或存储器，而且目标操作数隐含规定在累加器中。 

1）MUL指令

    （a）、字节乘法，则AL×REG8/MEM8，乘积存于AX中。

    （b）、字乘法，则AX×REG16/MEM16，乘积的高16位存放在DX中，低16位存放在AX中。

    （c）、32位乘法，则EAX×REG32/MEM32，乘积的高32位存放在EDX中，低32位存放在EAX中。

    （d）、64位乘法，则RAX×REG64/MEM64，乘积的高64位存放在RDX中，低64位存放在RAX中。

    当乘积的高半部分（AH、DX、EDX、RDX）中存有结果的有效数字，则CF=OF=1，否则CF=OF=0。

2）IMUL指令

    IMUL指令除了是完成两个有符号数的相乘以外，其他与MUL完全类似。

 
注：由于乘法指令为乘积保留了两倍于原来操作数的存储空间，因而不会出现溢出。


ADD dest,source		;ADD reg,imm/reg/mem

在操作中，源操作数不能改变，相加之和存放在目的操作数中
